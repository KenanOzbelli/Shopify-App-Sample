{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/kenanozbelli/Documents/Coding Projects/Sample-embedded-app/components/ResourceList/index.js\";\nimport React from 'react';\nimport gql from 'graphql-tag';\nimport { Query } from 'react-apollo';\nimport { Card, Stack, TextStyle, Thumbnail } from '@shopify/polaris';\nimport store from 'store-js';\nconst GET_PRODUCTS_BY_ID = gql`\nquery getProducts($ids: [ID!]!){\n    nodes(ids: $ids){\n        ... on Product {\n            title\n            handle \n            descriptionHtml\n            id\n            images(first: 1){\n                edges{\n                    node{\n                        originalSrc\n                        altText\n                    }\n                }\n            }\n            variants(first: 1){\n                edges{\n                    node{\n                        price\n                        id\n                    }\n                }\n            }\n        }\n    }\n}`;\n\nconst ResourceListWithProducts = () => {\n  return;\n\n  /*#__PURE__*/\n  _jsxDEV(Query, {\n    query: GET_PRODUCTS_BY_ID,\n    variables: {\n      ids: store.get('ids')\n    },\n    children: ({\n      data,\n      loading,\n      error\n    }) => {\n      if (loading) return /*#__PURE__*/_jsxDEV(\"div\", {\n        children: \"Loading....\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 32\n      }, this);\n      if (error) return /*#__PURE__*/_jsxDEV(\"div\", {\n        children: error.message\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 30\n      }, this);\n      console.log(data);\n      return /*#__PURE__*/_jsxDEV(Card, {\n        children: /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Stuff Here\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 17\n      }, this);\n    }\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 43,\n    columnNumber: 5\n  }, this);\n};\n\nexport default ResourceListWithProducts;","map":{"version":3,"sources":["/Users/kenanozbelli/Documents/Coding Projects/Sample-embedded-app/components/ResourceList/index.js"],"names":["React","gql","Query","Card","Stack","TextStyle","Thumbnail","store","GET_PRODUCTS_BY_ID","ResourceListWithProducts","ids","get","data","loading","error","message","console","log"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,GAAP,MAAiB,aAAjB;AACA,SAASC,KAAT,QAAsB,cAAtB;AACA,SACIC,IADJ,EAEIC,KAFJ,EAGIC,SAHJ,EAIIC,SAJJ,QAKO,kBALP;AAMA,OAAOC,KAAP,MAAkB,UAAlB;AAEA,MAAMC,kBAAkB,GAAGP,GAAI;AAC/B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EA1BA;;AA4BA,MAAMQ,wBAAwB,GAAG,MAAM;AAEnC;;AACA;AAAA,UAAC,KAAD;AAAO,IAAA,KAAK,EAAED,kBAAd;AAAkC,IAAA,SAAS,EAAE;AAAEE,MAAAA,GAAG,EAAEH,KAAK,CAACI,GAAN,CAAU,KAAV;AAAP,KAA7C;AAAA,cACK,CAAC;AAAEC,MAAAA,IAAF;AAAQC,MAAAA,OAAR;AAAiBC,MAAAA;AAAjB,KAAD,KAA8B;AAC3B,UAAGD,OAAH,EAAY,oBAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAAP;AACZ,UAAGC,KAAH,EAAU,oBAAO;AAAA,kBAAMA,KAAK,CAACC;AAAZ;AAAA;AAAA;AAAA;AAAA,cAAP;AACVC,MAAAA,OAAO,CAACC,GAAR,CAAYL,IAAZ;AACA,0BACI,QAAC,IAAD;AAAA,+BACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,cADJ;AAKH;AAVL;AAAA;AAAA;AAAA;AAAA;AAYH,CAfD;;AAiBA,eAAeH,wBAAf","sourcesContent":["import React from 'react';\nimport gql  from 'graphql-tag';\nimport { Query } from 'react-apollo';\nimport { \n    Card,\n    Stack, \n    TextStyle,\n    Thumbnail,\n} from '@shopify/polaris';\nimport store from 'store-js';\n\nconst GET_PRODUCTS_BY_ID = gql`\nquery getProducts($ids: [ID!]!){\n    nodes(ids: $ids){\n        ... on Product {\n            title\n            handle \n            descriptionHtml\n            id\n            images(first: 1){\n                edges{\n                    node{\n                        originalSrc\n                        altText\n                    }\n                }\n            }\n            variants(first: 1){\n                edges{\n                    node{\n                        price\n                        id\n                    }\n                }\n            }\n        }\n    }\n}`;\n\nconst ResourceListWithProducts = () => {\n\n    return\n    <Query query={GET_PRODUCTS_BY_ID} variables={{ ids: store.get('ids')}}>\n        {({ data, loading, error }) => {\n            if(loading) return <div>Loading....</div>;\n            if(error) return <div>{error.message}</div>;\n            console.log(data);\n            return(\n                <Card>\n                    <p>Stuff Here</p>\n                </Card>\n            )\n        }}\n    </Query>\n}\n\nexport default ResourceListWithProducts;\n"]},"metadata":{},"sourceType":"module"}