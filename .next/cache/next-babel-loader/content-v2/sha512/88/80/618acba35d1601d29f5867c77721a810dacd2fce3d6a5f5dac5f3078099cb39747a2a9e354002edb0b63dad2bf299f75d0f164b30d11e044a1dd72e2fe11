{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport _taggedTemplateLiteral from \"@babel/runtime/helpers/esm/taggedTemplateLiteral\";\n\nvar _jsxFileName = \"/Users/kenanozbelli/Documents/Coding Projects/Sample-embedded-app/components/ResourceList/index.js\",\n    _this = this;\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteral([\"\\nquery getProducts($ids: [ID!]!){\\n    nodes(ids: $ids){\\n        ... on Product {\\n            title\\n            handle \\n            descriptionHtml\\n            id\\n            images(first: 1){\\n                edges{\\n                    node{\\n                        originalSrc\\n                        altText\\n                    }\\n                }\\n            }\\n            variants(first: 1){\\n                edges{\\n                    node{\\n                        price\\n                        id\\n                    }\\n                }\\n            }\\n        }\\n    }\\n}\"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nimport React from 'react';\nimport gql from 'graphql-tag';\nimport { Query } from 'react-apollo';\nimport { Card, ResourceList, Stack, TextStyle, Thumbnail } from '@shopify/polaris';\nimport store from 'store-js';\nvar GET_PRODUCTS_BY_ID = gql(_templateObject());\n\nvar ResourceListWithProducts = function ResourceListWithProducts() {\n  var twoWeeksFromNow = new Date(Date.now() + 12096e5).toDateString();\n  return /*#__PURE__*/_jsxDEV(Query, {\n    query: GET_PRODUCTS_BY_ID,\n    variables: {\n      ids: store.get('ids')\n    },\n    children: function children(_ref) {\n      var data = _ref.data,\n          loading = _ref.loading,\n          error = _ref.error;\n      if (loading) return /*#__PURE__*/_jsxDEV(\"div\", {\n        children: \"Loading....\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 32\n      }, _this);\n      if (error) return /*#__PURE__*/_jsxDEV(\"div\", {\n        children: error.message\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 30\n      }, _this);\n      console.log(data);\n      return /*#__PURE__*/_jsxDEV(Card, {\n        children: /*#__PURE__*/_jsxDEV(ResourceList, {\n          showHeader: true,\n          resourceName: {\n            singular: 'Product',\n            plural: 'Products'\n          },\n          items: data.nodes,\n          renderItem: function renderItem(item) {\n            var media = /*#__PURE__*/_jsxDEV(Thumbnail, {\n              source: item.images.edges[0] ? item.images.edges[0].node.originalSrc : '',\n              alt: item.images.edges[0] ? item.images.edges[0].node.altText : ''\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 57,\n              columnNumber: 33\n            }, _this);\n\n            var price = item.variants.edges[0].node.price;\n            return /*#__PURE__*/_jsxDEV(ResourceList.Item, {\n              id: item.id,\n              media: media,\n              accessibilityLabel: \"View details for \".concat(item.title),\n              children: [/*#__PURE__*/_jsxDEV(Stack, {\n                children: [/*#__PURE__*/_jsxDEV(Stack.Item, {\n                  fill: true,\n                  children: /*#__PURE__*/_jsxDEV(\"h3\", {\n                    children: /*#__PURE__*/_jsxDEV(TextStyle, {\n                      variant: \"strong\",\n                      children: item.title\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 80,\n                      columnNumber: 49\n                    }, _this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 79,\n                    columnNumber: 45\n                  }, _this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 78,\n                  columnNumber: 41\n                }, _this), /*#__PURE__*/_jsxDEV(Stack.Item, {\n                  children: /*#__PURE__*/_jsxDEV(\"p\", {\n                    children: [\"$\", price]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 86,\n                    columnNumber: 45\n                  }, _this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 85,\n                  columnNumber: 41\n                }, _this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 77,\n                columnNumber: 37\n              }, _this), /*#__PURE__*/_jsxDEV(Stack, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 89,\n                columnNumber: 37\n              }, _this), /*#__PURE__*/_jsxDEV(\"p\", {\n                children: twoWeeksFromNow\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 90,\n                columnNumber: 37\n              }, _this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 72,\n              columnNumber: 33\n            }, _this);\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 21\n        }, _this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 17\n      }, _this);\n    }\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 44,\n    columnNumber: 5\n  }, _this);\n};\n\n_c = ResourceListWithProducts;\nexport default ResourceListWithProducts;\n\nvar _c;\n\n$RefreshReg$(_c, \"ResourceListWithProducts\");","map":{"version":3,"sources":["/Users/kenanozbelli/Documents/Coding Projects/Sample-embedded-app/components/ResourceList/index.js"],"names":["React","gql","Query","Card","ResourceList","Stack","TextStyle","Thumbnail","store","GET_PRODUCTS_BY_ID","ResourceListWithProducts","twoWeeksFromNow","Date","now","toDateString","ids","get","data","loading","error","message","console","log","singular","plural","nodes","item","media","images","edges","node","originalSrc","altText","price","variants","id","title"],"mappings":"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","sourcesContent":["import React from 'react';\nimport gql  from 'graphql-tag';\nimport { Query } from 'react-apollo';\nimport { \n    Card,\n    ResourceList,\n    Stack, \n    TextStyle,\n    Thumbnail,\n} from '@shopify/polaris';\nimport store from 'store-js';\n\nconst GET_PRODUCTS_BY_ID = gql`\nquery getProducts($ids: [ID!]!){\n    nodes(ids: $ids){\n        ... on Product {\n            title\n            handle \n            descriptionHtml\n            id\n            images(first: 1){\n                edges{\n                    node{\n                        originalSrc\n                        altText\n                    }\n                }\n            }\n            variants(first: 1){\n                edges{\n                    node{\n                        price\n                        id\n                    }\n                }\n            }\n        }\n    }\n}`;\n\nconst ResourceListWithProducts = () => {\nconst twoWeeksFromNow = new Date(Date.now() + 12096e5).toDateString();\nreturn(\n    <Query query={GET_PRODUCTS_BY_ID} variables={{ ids: store.get('ids')}}>\n        {({ data, loading, error }) => {\n            if(loading) return <div>Loading....</div>;\n            if(error) return <div>{error.message}</div>;\n            console.log(data);\n            return(\n                <Card>\n                    <ResourceList \n                        showHeader\n                        resourceName={{ singular:'Product', plural: 'Products' }}\n                        items={data.nodes}\n                        renderItem={ item => {\n                            const media = (\n                                <Thumbnail \n                                    source={\n                                        item.images.edges[0]\n                                        ? item.images.edges[0].node.originalSrc\n                                        : ''\n                                    }\n                                    alt={\n                                    item.images.edges[0] \n                                    ? item.images.edges[0].node.altText\n                                    : ''\n                                 } \n                            />\n                            );\n                            const price = item.variants.edges[0].node.price;\n                            return(\n                                <ResourceList.Item\n                                    id={item.id}\n                                    media={media}\n                                    accessibilityLabel={`View details for ${item.title}`}\n                                >\n                                    <Stack>\n                                        <Stack.Item fill>\n                                            <h3>\n                                                <TextStyle variant=\"strong\">\n                                                    {item.title}\n                                                </TextStyle>\n                                            </h3>\n                                        </Stack.Item>\n                                        <Stack.Item>\n                                            <p>${price}</p>\n                                        </Stack.Item>\n                                    </Stack>\n                                    <Stack></Stack>\n                                    <p>{twoWeeksFromNow}</p>\n                                </ResourceList.Item>\n                            )\n                        }}\n                        />\n                </Card>\n            )\n        }}\n    </Query>\n    )\n}\n\nexport default ResourceListWithProducts;\n"]},"metadata":{},"sourceType":"module"}