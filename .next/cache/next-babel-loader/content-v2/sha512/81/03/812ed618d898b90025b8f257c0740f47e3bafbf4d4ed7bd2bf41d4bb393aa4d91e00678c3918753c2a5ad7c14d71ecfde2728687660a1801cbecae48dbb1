{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/kenanozbelli/Documents/Coding Projects/Sample-embedded-app/components/ResourceList/index.js\";\nimport React from 'react';\nimport gql from 'graphql-tag';\nimport { Query } from 'react-apollo';\nimport { Card, ResourceList, Stack, TextStyle, Thumbnail } from '@shopify/polaris';\nimport store from 'store-js';\nimport { render } from 'react-dom';\nconst GET_PRODUCTS_BY_ID = gql`\nquery getProducts($ids: [ID!]!){\n    nodes(ids: $ids){\n        ... on Product {\n            title\n            handle \n            descriptionHtml\n            id\n            images(first: 1){\n                edges{\n                    node{\n                        originalSrc\n                        altText\n                    }\n                }\n            }\n            variants(first: 1){\n                edges{\n                    node{\n                        price\n                        id\n                    }\n                }\n            }\n        }\n    }\n}`;\n\nconst ResourceListWithProducts = () => {\n  const twoWeeksFromNow = new Date(Date.now() + 12096e5).toDateString();\n  return /*#__PURE__*/_jsxDEV(Query, {\n    query: GET_PRODUCTS_BY_ID,\n    variables: {\n      ids: store.get('ids')\n    },\n    children: ({\n      data,\n      loading,\n      error\n    }) => {\n      if (loading) return /*#__PURE__*/_jsxDEV(\"div\", {\n        children: \"Loading....\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 32\n      }, this);\n      if (error) return /*#__PURE__*/_jsxDEV(\"div\", {\n        children: error.message\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 30\n      }, this);\n      console.log(data);\n      return /*#__PURE__*/_jsxDEV(Card, {\n        children: /*#__PURE__*/_jsxDEV(ResourceList, {\n          showHeader: true,\n          resourceName: {\n            singular: 'Product',\n            plural: 'Products'\n          },\n          items: data.nodes,\n          renderItem: item => {\n            const media = /*#__PURE__*/_jsxDEV(Thumbnail, {\n              source: item.images.edges[0] ? item.images.edges[0].node.originalSrc : '',\n              alt: item.images.edges[0] ? item.images.edges[0].node.altText : ''\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 58,\n              columnNumber: 33\n            }, this);\n\n            const price = item.variants.edges[0].node.price;\n            return /*#__PURE__*/_jsxDEV(ResourceList.Item, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 73,\n              columnNumber: 33\n            }, this);\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 17\n      }, this);\n    }\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 45,\n    columnNumber: 5\n  }, this);\n};\n\nexport default ResourceListWithProducts;","map":{"version":3,"sources":["/Users/kenanozbelli/Documents/Coding Projects/Sample-embedded-app/components/ResourceList/index.js"],"names":["React","gql","Query","Card","ResourceList","Stack","TextStyle","Thumbnail","store","render","GET_PRODUCTS_BY_ID","ResourceListWithProducts","twoWeeksFromNow","Date","now","toDateString","ids","get","data","loading","error","message","console","log","singular","plural","nodes","item","media","images","edges","node","originalSrc","altText","price","variants"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,GAAP,MAAiB,aAAjB;AACA,SAASC,KAAT,QAAsB,cAAtB;AACA,SACIC,IADJ,EAEIC,YAFJ,EAGIC,KAHJ,EAIIC,SAJJ,EAKIC,SALJ,QAMO,kBANP;AAOA,OAAOC,KAAP,MAAkB,UAAlB;AACA,SAASC,MAAT,QAAuB,WAAvB;AAEA,MAAMC,kBAAkB,GAAGT,GAAI;AAC/B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EA1BA;;AA4BA,MAAMU,wBAAwB,GAAG,MAAM;AACvC,QAAMC,eAAe,GAAG,IAAIC,IAAJ,CAASA,IAAI,CAACC,GAAL,KAAa,OAAtB,EAA+BC,YAA/B,EAAxB;AACA,sBACI,QAAC,KAAD;AAAO,IAAA,KAAK,EAAEL,kBAAd;AAAkC,IAAA,SAAS,EAAE;AAAEM,MAAAA,GAAG,EAAER,KAAK,CAACS,GAAN,CAAU,KAAV;AAAP,KAA7C;AAAA,cACK,CAAC;AAAEC,MAAAA,IAAF;AAAQC,MAAAA,OAAR;AAAiBC,MAAAA;AAAjB,KAAD,KAA8B;AAC3B,UAAGD,OAAH,EAAY,oBAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAAP;AACZ,UAAGC,KAAH,EAAU,oBAAO;AAAA,kBAAMA,KAAK,CAACC;AAAZ;AAAA;AAAA;AAAA;AAAA,cAAP;AACVC,MAAAA,OAAO,CAACC,GAAR,CAAYL,IAAZ;AACA,0BACI,QAAC,IAAD;AAAA,+BACI,QAAC,YAAD;AACI,UAAA,UAAU,MADd;AAEI,UAAA,YAAY,EAAE;AAAEM,YAAAA,QAAQ,EAAC,SAAX;AAAsBC,YAAAA,MAAM,EAAE;AAA9B,WAFlB;AAGI,UAAA,KAAK,EAAEP,IAAI,CAACQ,KAHhB;AAII,UAAA,UAAU,EAAGC,IAAI,IAAI;AACjB,kBAAMC,KAAK,gBACP,QAAC,SAAD;AACI,cAAA,MAAM,EACFD,IAAI,CAACE,MAAL,CAAYC,KAAZ,CAAkB,CAAlB,IACEH,IAAI,CAACE,MAAL,CAAYC,KAAZ,CAAkB,CAAlB,EAAqBC,IAArB,CAA0BC,WAD5B,GAEE,EAJV;AAMI,cAAA,GAAG,EACHL,IAAI,CAACE,MAAL,CAAYC,KAAZ,CAAkB,CAAlB,IACEH,IAAI,CAACE,MAAL,CAAYC,KAAZ,CAAkB,CAAlB,EAAqBC,IAArB,CAA0BE,OAD5B,GAEE;AATN;AAAA;AAAA;AAAA;AAAA,oBADJ;;AAcA,kBAAMC,KAAK,GAAGP,IAAI,CAACQ,QAAL,CAAcL,KAAd,CAAoB,CAApB,EAAuBC,IAAvB,CAA4BG,KAA1C;AACA,gCACI,QAAC,YAAD,CAAc,IAAd;AAAA;AAAA;AAAA;AAAA,oBADJ;AAKH;AAzBL;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,cADJ;AA+BH;AApCL;AAAA;AAAA;AAAA;AAAA,UADJ;AAwCC,CA1CD;;AA4CA,eAAevB,wBAAf","sourcesContent":["import React from 'react';\nimport gql  from 'graphql-tag';\nimport { Query } from 'react-apollo';\nimport { \n    Card,\n    ResourceList,\n    Stack, \n    TextStyle,\n    Thumbnail,\n} from '@shopify/polaris';\nimport store from 'store-js';\nimport { render } from 'react-dom';\n\nconst GET_PRODUCTS_BY_ID = gql`\nquery getProducts($ids: [ID!]!){\n    nodes(ids: $ids){\n        ... on Product {\n            title\n            handle \n            descriptionHtml\n            id\n            images(first: 1){\n                edges{\n                    node{\n                        originalSrc\n                        altText\n                    }\n                }\n            }\n            variants(first: 1){\n                edges{\n                    node{\n                        price\n                        id\n                    }\n                }\n            }\n        }\n    }\n}`;\n\nconst ResourceListWithProducts = () => {\nconst twoWeeksFromNow = new Date(Date.now() + 12096e5).toDateString();\nreturn(\n    <Query query={GET_PRODUCTS_BY_ID} variables={{ ids: store.get('ids')}}>\n        {({ data, loading, error }) => {\n            if(loading) return <div>Loading....</div>;\n            if(error) return <div>{error.message}</div>;\n            console.log(data);\n            return(\n                <Card>\n                    <ResourceList \n                        showHeader\n                        resourceName={{ singular:'Product', plural: 'Products' }}\n                        items={data.nodes}\n                        renderItem={ item => {\n                            const media = (\n                                <Thumbnail \n                                    source={\n                                        item.images.edges[0]\n                                        ? item.images.edges[0].node.originalSrc\n                                        : ''\n                                    }\n                                    alt={\n                                    item.images.edges[0] \n                                    ? item.images.edges[0].node.altText\n                                    : ''\n                                 } \n                            />\n                            );\n                            const price = item.variants.edges[0].node.price;\n                            return(\n                                <ResourceList.Item\n                                >\n                                </ResourceList.Item>\n                            )\n                        }}\n                        />\n                </Card>\n            )\n        }}\n    </Query>\n    )\n}\n\nexport default ResourceListWithProducts;\n"]},"metadata":{},"sourceType":"module"}